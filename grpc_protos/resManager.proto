// Copyright 2015, Google Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.resAdmin.resManager";
option java_outer_classname = "resManager";
option objc_class_prefix = "RA";

package resAdmin;

// The resourceManager service definition.
service resManager {
  // Sends a resource request
  rpc reserveWindows (reserveRequest) returns (reserveResponse) {}
  rpc releaseWindows (releaseRequest) returns (releaseResponse) {}
  rpc updateResPool (resStatusInfo) returns (resStatusInfo) {}
  rpc getResPoolInfo (Empty) returns (resGetResPoolInfo) {}
  rpc checkHeartBeat (resAgentInfo) returns (heartBeat){}
}

message releaseRequest{
  string jobUUID = 1;
  string occupier = 2;
}

message releaseResponse{
   int32 retCode = 1;
}

message reserveRequest {
  int32 resNum = 1;
  string occupier = 2;
  int32 reserveSeconds = 3;
  string jobUUID = 4;
}

message reserveResponse {
  enum RetCode{
    UNKNOWN = 0;
    SUCCESS = 1;
    NO_RESOURCE = 3;
  }
  RetCode retCode  = 1;
  repeated  string IPList = 2;
}


message resStatusInfo{
    enum ResStatus{
        UNKNOWN = 0;
        AVAILABLE = 1;
        PENDING = 2;
        OCCUPIED = 3;
        RELEASING = 4;
    }
    string resType = 1;
    string resIP = 2;
    ResStatus resStatus = 3;
    string occupier = 4;
    string occupyExpireTimeStamp = 5;
    string timestamp = 6;
    string jobUUID = 7;
}

message Empty{
}

message resGetResPoolInfo {
  int32 total = 1;
  int32 free = 2;
}

message resAgentInfo {
  string resIP = 1;
}

message heartBeat {
  bool isAlive = 1; 
}
